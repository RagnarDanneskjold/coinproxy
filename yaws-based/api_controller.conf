%% -*- mode: erlang -*-
%% By default, all APIs are disabled, we need to enable the APIs we want explicitly.
%% Note that in Erlang, ' is not equal to ".

{addmultisigaddress,         ''}. %% addmultisigaddress <nrequired> <'["key","key"]'> [account]
{addnode,                    ''}. %% addnode <node> <add|remove|onetry>
{backupwallet,               ''}. %% backupwallet <destination>
{createmultisig,             ''}. %% createmultisig <nrequired> <'["key","key"]'>
{createrawtransaction,       ''}. %% createrawtransaction [{"txid":txid,"vout":n},...] {address:amount,...}
{decoderawtransaction,       ''}. %% decoderawtransaction <hex string>
{dumpprivkey,                ''}. %% dumpprivkey <bitcoinaddress>
{encryptwallet,              ''}. %% encryptwallet <passphrase>
{getaccount,                 ''}. %% getaccount <bitcoinaddress>
{getaccountaddress,          ''}. %% getaccountaddress <account>
{getaddednodeinfo,           ''}. %% getaddednodeinfo <dns> [node]
{getaddressesbyaccount,      ''}. %% getaddressesbyaccount <account>
{getbalance,                 ''}. %% getbalance [account] [minconf=1]
{getblock,                   ''}. %% getblock <hash>
{getblockcount,        'enable'}. %% getblockcount
{getblockhash,               ''}. %% getblockhash <index>
{getblocktemplate,           ''}. %% getblocktemplate [params]
{getconnectioncount,         ''}. %% getconnectioncount
{getdifficulty,              ''}. %% getdifficulty
{getgenerate,                ''}. %% getgenerate
{gethashespersec,            ''}. %% gethashespersec
{getinfo,              'enable'}. %% getinfo
{getmininginfo,              ''}. %% getmininginfo
{getnewaddress,              ''}. %% getnewaddress [account]
{getpeerinfo,                ''}. %% getpeerinfo
{getrawmempool,              ''}. %% getrawmempool
{getrawtransaction,          ''}. %% getrawtransaction <txid> [verbose=0]
{getreceivedbyaccount,       ''}. %% getreceivedbyaccount <account> [minconf=1]
{getreceivedbyaddress,       ''}. %% getreceivedbyaddress <bitcoinaddress> [minconf=1]
{gettransaction,             ''}. %% gettransaction <txid>
{gettxout,                   ''}. %% gettxout <txid> <n> [includemempool=true]
{gettxoutsetinfo,            ''}. %% gettxoutsetinfo
{getwork,                    ''}. %% getwork [data]
{help,                       ''}. %% help [command]
{importprivkey,              ''}. %% importprivkey <bitcoinprivkey> [label] [rescan=true]
{keypoolrefill,              ''}. %% keypoolrefill
{listaccounts,               ''}. %% listaccounts [minconf=1]
{listaddressgroupings,       ''}. %% listaddressgroupings
{listlockunspent,            ''}. %% listlockunspent
{listreceivedbyaccount,      ''}. %% listreceivedbyaccount [minconf=1] [includeempty=false]
{listreceivedbyaddress,      ''}. %% listreceivedbyaddress [minconf=1] [includeempty=false]
{listsinceblock,             ''}. %% listsinceblock [blockhash] [target-confirmations]
{listtransactions,           ''}. %% listtransactions [account] [count=10] [from=0]
{listunspent,                ''}. %% listunspent [minconf=1] [maxconf=9999999]  ["address",...]
{lockunspent,                ''}. %% lockunspent unlock? [array-of-Objects]
{move,                       ''}. %% move <fromaccount> <toaccount> <amount> [minconf=1] [comment]
{sendfrom,                   ''}. %% sendfrom <fromaccount> <tobitcoinaddress> <amount> [minconf=1] [comment] [comment-to]
{sendmany,                   ''}. %% sendmany <fromaccount> {address:amount,...} [minconf=1] [comment]
{sendrawtransaction,         ''}. %% sendrawtransaction <hex string>
{sendtoaddress,              ''}. %% sendtoaddress <bitcoinaddress> <amount> [comment] [comment-to]
{setaccount,                 ''}. %% setaccount <bitcoinaddress> <account>
{setgenerate,                ''}. %% setgenerate <generate> [genproclimit]
{settxfee,                   ''}. %% settxfee <amount>
{signmessage,                ''}. %% signmessage <bitcoinaddress> <message>
{signrawtransaction,         ''}. %% signrawtransaction <hex string> [{"txid":txid,"vout":n,"scriptPubKey":hex,"redeemScript":hex},...] [<privatekey1>,...] [sighashtype="ALL"]
{stop,                       ''}. %% stop
{submitblock,                ''}. %% submitblock <hex data> [optional-params-obj]
{validateaddress,            ''}. %% validateaddress <bitcoinaddress>
{verifymessage,              ''}. %% verifymessage <bitcoinaddress> <signature> <message>

%% ------------------------------- emacs lisp -------------------------------------
%% (defun go (textBegin textEnd)
%%   "Add [] around the selected text"
%%   (setq rpcmethod (buffer-substring-no-properties textBegin textEnd))
%%   (interactive "r")
%%   (goto-char textBegin)
%%   (insert "{")
%%   (insert rpcmethod)
%%   (insert ", ''}. %% ")
%%   (goto-char (+ textEnd 1))
%%   (insert ""))

%% (global-set-key (kbd "C-u") 'go)

%% Example
%% verifymessage <bitcoinaddress> <signature> <message>
%% {verifymessage, ''}. %% verifymessage <bitcoinaddress> <signature> <message>

